name: Deployment

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      flask-version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Flask Version number'
        # Input has to be provided for the workflow to run
        required: true
        
      postgres-version:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Postgres Version number'
        # Input has to be provided for the workflow to run
        required: true

jobs:           
    deploy: 
        name: Deploy to Server
        runs-on: self-hosted

        steps:
          - name : Pull newest images
            run: |
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.event.inputs.flask-version }}
                docker pull ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.event.inputs.postgres-version }}
      
          - name: Stop and Remove Existing Containers and Networks
            run: |
                docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
                docker network prune -f

          - name: Create Network and Run containers
            run : |
              docker network create library
              docker run -d -p 5432:5432 --network library --hostname database --mount "type=volume,source=pgdata,destination=/var/lib/postgresql/data" --name postgres-container -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=qwerty123 -e POSTGRES_DB=perpus ${{ secrets.DOCKERHUB_USERNAME }}/postgres:${{ github.event.inputs.postgres-version }}
              sleep 5
              docker run -d -p 5000:5000 --network library --name flask-container ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:${{ github.event.inputs.flask-version }}
      
          - name: Remove unused data
            run: |
              docker system prune -af
